{"version":3,"sources":["components/Dropspace.js","containers/DropspaceContainer.js","components/Workspace.js","containers/App.js","serviceWorker.js","index.js"],"names":["Dropspace","triggerInput","handleDropFile","addImage","inputRef","dropRef","drag","files","className","onClick","ref","type","onChange","accept","map","file","i","key","src","alt","name","DropspaceContainer","state","React","createRef","handleDrag","e","preventDefault","stopPropagation","handleDragIn","console","log","dragCounter","dataTransfer","items","length","setState","handleDragOut","handleDrop","props","clearData","persist","current","click","render","div","this","addEventListener","removeEventListener","Component","Workspace","onMouseDown","onMouseUp","onRemoveImage","images","select","position","image","draggable","style","transform","y","x","top","left","App","offset","coord","reader","FileReader","readAsDataURL","onload","source","target","result","Math","random","removeImage","filter","item","index","handleMouseMove","clientX","clientY","handleMouseUp","document","handleMouseDown","offsetX","offsetY","coordX","parseInt","coordY","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mOA4BeA,EA1BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,eAAgBC,EAAjC,EAAiCA,SAAUC,EAA3C,EAA2CA,SAAUC,EAArD,EAAqDA,QAASC,EAA9D,EAA8DA,KAAMC,EAApE,EAAoEA,MAApE,OACjB,iCACC,yBAAKC,UAAU,SAAf,kFAEC,4BAAQA,UAAU,aAAaC,QAASR,GACvC,0BAAMO,UAAU,iBAChB,0BAAMA,UAAU,aAAhB,6EACA,2BAAOA,UAAU,aAAaE,IAAKN,EAAUO,KAAK,OAAOC,SAAUV,EAAgBW,OAAO,cAG5F,yBACCL,UAAU,YACVE,IAAKL,GAEJC,GACA,yBAAKE,UAAU,mBACd,yBAAKA,UAAU,mBAAf,6FAGDD,EAAMO,KAAI,SAACC,EAAMC,GAAP,OACV,yBAAKR,UAAU,kBAAkBS,IAAKD,GAAG,yBAAKR,UAAU,qBAAqBC,QAASN,EAAUe,IAAKH,EAAKG,IAAKC,IAAKJ,EAAKK,cC2D9GC,E,2MA5EdC,MAAQ,CACPhB,MAAM,G,EAGPD,QAAUkB,IAAMC,Y,EAChBpB,SAAWmB,IAAMC,Y,EAEjBC,WAAa,SAACC,GACbA,EAAEC,iBACFD,EAAEE,mB,EAGHC,aAAe,SAACH,GACfA,EAAEC,iBACFD,EAAEE,kBACFE,QAAQC,IAAI,EAAKT,MAAMhB,MACvB,EAAK0B,cACDN,EAAEO,aAAaC,OAASR,EAAEO,aAAaC,MAAMC,OAAS,GACzD,EAAKC,SAAS,CAAC9B,MAAM,K,EAIvB+B,cAAgB,SAACX,GAChBA,EAAEC,iBACFD,EAAEE,kBACFE,QAAQC,IAAI,EAAKT,MAAMhB,MACvB,EAAK0B,cACoB,IAArB,EAAKA,aACR,EAAKI,SAAS,CAAC9B,MAAM,K,EAIvBgC,WAAa,SAACZ,GACbA,EAAEC,iBACFD,EAAEE,kBACF,EAAKQ,SAAS,CAAC9B,MAAM,IACjBoB,EAAEO,aAAa1B,OAASmB,EAAEO,aAAa1B,MAAM4B,OAAS,IACzD,EAAKI,MAAMD,WAAWZ,EAAEO,aAAa1B,OACrCmB,EAAEO,aAAaO,YACf,EAAKR,YAAc,I,EAoBrB/B,aAAe,SAACyB,GACfA,EAAEe,UACF,EAAKrC,SAASsC,QAAQC,S,EAGvBC,OAAS,kBACR,kBAAC,EAAD,CACC3C,aAAc,EAAKA,aACnBC,eAAgB,EAAKqC,MAAMrC,eAC3BC,SAAU,EAAKoC,MAAMpC,SACrBC,SAAU,EAAKA,SACfC,QAAS,EAAKA,QACdC,KAAM,EAAKgB,MAAMhB,KACjBC,MAAO,EAAKgC,MAAMhC,S,mFA5BnB,IAAIsC,EAAMC,KAAKzC,QAAQqC,QACvBG,EAAIE,iBAAiB,YAAaD,KAAKjB,cACvCgB,EAAIE,iBAAiB,YAAaD,KAAKT,eACvCQ,EAAIE,iBAAiB,WAAYD,KAAKrB,YACtCoB,EAAIE,iBAAiB,OAAQD,KAAKR,c,6CAIlC,IAAIO,EAAMC,KAAKzC,QAAQqC,QACvBG,EAAIG,oBAAoB,YAAaF,KAAKjB,cAC1CgB,EAAIG,oBAAoB,YAAaF,KAAKT,eAC1CQ,EAAIG,oBAAoB,WAAYF,KAAKrB,YACzCoB,EAAIG,oBAAoB,OAAQF,KAAKR,gB,GA1DNf,IAAM0B,WCqBxBC,EAtBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,cAAeC,EAA1C,EAA0CA,OAAQC,EAAlD,EAAkDA,OAAQC,EAA1D,EAA0DA,SAA1D,OACjB,iCACC,yBAAKhD,UAAU,SAAf,yFACA,yBAAKA,UAAU,aACZ8C,EAAOxC,KAAI,SAAC2C,EAAOzC,GAAR,OACX,yBAAKR,UAAW+C,IAAWvC,EAAI,0CAA4C,kBAC1EC,IAAOD,EACP0C,UAAU,OACVN,UAAW,SAAA1B,GAAC,OAAI0B,EAAU1B,EAAGV,IAC7BmC,YAAa,SAAAzB,GAAC,OAAIyB,EAAYzB,EAAGV,IACjC2C,MAAQJ,IAAWvC,EAAI,CAAC4C,UAAW,cAAcJ,EAASK,EAAE,kBAAkBL,EAASM,EAAE,qBAAuB,CAACF,UAAW,cAAcH,EAAMD,SAASO,IAAI,kBAAkBN,EAAMD,SAASQ,KAAK,sBAEnM,yBAAKxD,UAAU,qBAAqBU,IAAKuC,EAAMvC,IAAKC,IAAM,KAC1D,4BAAQX,UAAU,eAAeC,QAAS,SAAAiB,GAAC,OAAI2B,EAAc3B,EAAGV,KAC/D,0BAAMR,UAAU,iBAChB,0BAAMA,UAAU,aAAhB,sDC+FQyD,E,2MA1Gd3C,MAAQ,CACPf,MAAO,GACP+C,OAAQ,GACRE,SAAU,CAAEM,EAAG,EAAGD,EAAG,GACrBK,OAAQ,CAAEJ,EAAG,EAAGD,EAAG,GACnBM,MAAO,CAAEL,EAAG,EAAGD,EAAG,GAClBN,OAAQ,M,EAGTjB,WAAa,SAAC/B,GACb,IADwB,IAAD,WACdS,GACR,IAAKT,EAAMS,GAAGI,KAAM,MAAM,CAAN,UACpB,IAAIA,EAAOb,EAAMS,GAAGI,KACdgD,EAAS,IAAIC,WACnBD,EAAOE,cAAc/D,EAAMS,IAC3BoD,EAAOG,OAAS,SAAC7C,GAChB,IAAM8C,EAAS9C,EAAE+C,OAAOC,OACxB,EAAKtC,SAAS,CACb7B,MAAM,GAAD,mBAAM,EAAKe,MAAMf,OAAjB,CAAwB,CAACa,KAAMA,EAAMF,IAAKsD,SARzCxD,EAAI,EAAGA,EAAIT,EAAM4B,OAAQnB,IAAK,CAAC,IAAD,IAA9BA,GAA8B,oC,EAcxCd,eAAgB,SAACwB,GAChB,IAAInB,EAAQmB,EAAE+C,OAAOlE,MACrB,EAAK+B,WAAW/B,I,EAGjBJ,SAAW,SAACuB,GACX,EAAKU,SAAS,CACbkB,OAAO,GAAD,mBAAM,EAAKhC,MAAMgC,QAAjB,CAAyB,CAACpC,IAAKQ,EAAE+C,OAAOvD,IAAKsC,SAAU,CAAEO,IAAK,EAAGC,KAAoB,IAAdW,KAAKC,gB,EAIpFC,YAAc,SAACnD,EAAGV,GACjB,EAAKoB,SAAS,CACbmB,OAAQ,KACRD,OAAQ,EAAKhC,MAAMgC,OAAOwB,QAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAUhE,Q,EAI9DiE,gBAAkB,SAACvD,GAAO,IAAD,EACE,EAAKJ,MAAvB6C,EADgB,EAChBA,MAAOD,EADS,EACTA,OACXJ,EAAIK,EAAML,EAAEpC,EAAEwD,QAAQhB,EAAOJ,EAC7BD,EAAIM,EAAMN,EAAEnC,EAAEyD,QAAQjB,EAAOL,EAIjC,OAHA,EAAKzB,SAAS,CACboB,SAAU,CAACM,EAAGA,EAAGD,EAAGA,MAEd,G,EAGRuB,cAAgB,SAAC1D,EAAGV,GACnBU,EAAEC,iBADuB,MAES,EAAKL,MAA/BiC,EAFiB,EAEjBA,OAAQY,EAFS,EAETA,MAAOD,EAFE,EAEFA,OACvB,GAAc,OAAXX,EAAiB,CACnB,IAAIM,EAAIM,EAAMN,EAAInC,EAAEyD,QAAUjB,EAAOL,EACjCC,EAAIK,EAAML,EAAIpC,EAAEwD,QAAUhB,EAAOJ,EACrC,EAAK1B,SAAS,CACbkB,OAAQ,EAAKhC,MAAMgC,OAAOxC,KAAI,SAAC2C,EAAOuB,GAAR,OAC7BA,IAAUhE,EAAI,CAAEE,IAAKuC,EAAMvC,IAAKsC,SAAU,CAAEO,IAAKF,EAAGG,KAAMF,IAC1DL,OAGF4B,SAASrC,oBAAoB,YAAa,EAAKiC,iBAEhD,OAAO,G,EAGRK,gBAAkB,SAAC5D,EAAGV,GACrBU,EAAEC,iBACF,IAAM8B,EAAQ,EAAKnC,MAAMgC,OAAOtC,GAE5BuE,EAAU7D,EAAEwD,QAASM,EAAU9D,EAAEyD,QAEjCM,EAASC,SAASjC,EAAMD,SAASQ,MAAO2B,EAASD,SAASjC,EAAMD,SAASO,KAS7E,OAPA,EAAK3B,SAAS,CACbmB,OAAQvC,EACRkD,OAAQ,CAACJ,EAAGyB,EAAS1B,EAAG2B,GACxBrB,MAAO,CAACL,EAAG2B,EAAQ5B,EAAG8B,GACtBnC,SAAU,CAACM,EAAG2B,EAAQ5B,EAAG8B,KAE1BN,SAAStC,iBAAiB,YAAa,EAAKkC,kBACrC,G,EAGRrC,OAAS,kBACR,yBAAKpC,UAAU,aACd,kBAAC,EAAD,CACC2C,YAAa,EAAKmC,gBAClBlC,UAAW,EAAKgC,cAChB/B,cAAe,EAAKwB,YACpBvB,OAAQ,EAAKhC,MAAMgC,OACnBC,OAAQ,EAAKjC,MAAMiC,OACnBC,SAAU,EAAKlC,MAAMkC,WAEtB,kBAAC,EAAD,CACClB,WAAY,EAAKA,WACjBpC,eAAgB,EAAKA,eACrBC,SAAU,EAAKA,SACfI,MAAO,EAAKe,MAAMf,U,6BAvGJgB,IAAM0B,WCQJ2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASrD,OAAO,kBAAC,EAAD,MAASyC,SAASa,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.f2f77d76.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Dropspace = ({ triggerInput, handleDropFile, addImage, inputRef, dropRef, drag, files }) => (\r\n\t<section>\r\n\t\t<div className=\"title\">\r\n\t\t\tЗагрука файлов \r\n\t\t\t<button className=\"btn btn--m\" onClick={triggerInput}>\r\n\t\t\t\t<span className=\"ico ico--add\"/>\r\n\t\t\t\t<span className=\"btn__text\">Добавить файл</span>\r\n\t\t\t\t<input className=\"btn__input\" ref={inputRef} type=\"file\" onChange={handleDropFile} accept=\"image/*\" />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t\t<div\r\n\t\t\tclassName=\"dropspace\"\r\n\t\t\tref={dropRef}\r\n\t\t>\r\n\t\t\t{drag &&\r\n\t\t\t\t<div className=\"dropspace__drag\">\r\n\t\t\t\t\t<div className=\"dropspace__text\">Бросайте, я ловлю!</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{files.map((file, i) =>\r\n\t\t\t\t<div className=\"dropspace__item\" key={i}><img className=\"dropspace__preview\" onClick={addImage} src={file.src} alt={file.name} /></div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t</section>\r\n);\r\n\r\nexport default Dropspace;","import React from 'react';\r\nimport Dropspace from '../components/Dropspace';\r\n\r\nclass DropspaceContainer extends React.Component {\r\n\t\r\n\tstate = {\r\n\t\tdrag: false\r\n\t}\r\n\t\r\n\tdropRef = React.createRef();\r\n\tinputRef = React.createRef();\r\n\t\r\n\thandleDrag = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t}\r\n\t\r\n\thandleDragIn = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tconsole.log(this.state.drag);\r\n\t\tthis.dragCounter++;\r\n\t\tif (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n\t\t\tthis.setState({drag: true});\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleDragOut = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tconsole.log(this.state.drag);\r\n\t\tthis.dragCounter--;\r\n\t\tif (this.dragCounter === 0) {\r\n\t\t\tthis.setState({drag: false});\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleDrop = (e) => {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t\tthis.setState({drag: false})\r\n\t\tif (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n\t\t\tthis.props.handleDrop(e.dataTransfer.files);\r\n\t\t\te.dataTransfer.clearData();\r\n\t\t\tthis.dragCounter = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tlet div = this.dropRef.current\r\n\t\tdiv.addEventListener('dragenter', this.handleDragIn);\r\n\t\tdiv.addEventListener('dragleave', this.handleDragOut);\r\n\t\tdiv.addEventListener('dragover', this.handleDrag);\r\n\t\tdiv.addEventListener('drop', this.handleDrop);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tlet div = this.dropRef.current\r\n\t\tdiv.removeEventListener('dragenter', this.handleDragIn);\r\n\t\tdiv.removeEventListener('dragleave', this.handleDragOut);\r\n\t\tdiv.removeEventListener('dragover', this.handleDrag);\r\n\t\tdiv.removeEventListener('drop', this.handleDrop);\r\n\t}\r\n\t\r\n\ttriggerInput = (e) => {\r\n\t\te.persist();\r\n\t\tthis.inputRef.current.click();\r\n\t}\r\n\t\r\n\trender = () => (\r\n\t\t<Dropspace\r\n\t\t\ttriggerInput={this.triggerInput}\r\n\t\t\thandleDropFile={this.props.handleDropFile}\r\n\t\t\taddImage={this.props.addImage}\r\n\t\t\tinputRef={this.inputRef} \r\n\t\t\tdropRef={this.dropRef}\r\n\t\t\tdrag={this.state.drag}\r\n\t\t\tfiles={this.props.files}\r\n\t\t/>\r\n\t)\r\n}\r\nexport default DropspaceContainer;","import React from 'react';\r\n\r\nconst Workspace = ({ onMouseDown, onMouseUp, onRemoveImage, images, select, position }) => (\r\n\t<section>\r\n\t\t<div className=\"title\">Рабочая область</div>\r\n\t\t<div className=\"workspace\">\r\n\t\t\t\t{images.map((image, i) =>\r\n\t\t\t\t\t<div className={select === i ? \"workspace__item workspace__item--active\" : \"workspace__item\"}\r\n\t\t\t\t\t\tkey = {i} \r\n\t\t\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t\t\tonMouseUp={e => onMouseUp(e, i)}\r\n\t\t\t\t\t\tonMouseDown={e => onMouseDown(e, i)}\r\n\t\t\t\t\t\tstyle={ select === i ? {transform: 'translateY('+position.y+'px) translateX('+position.x+\"px) translateZ(0)\"} : {transform: 'translateY('+image.position.top+'px) translateX('+image.position.left+'px) translateZ(0)'}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img className=\"workspace__preview\" src={image.src} alt = \"\" />\r\n\t\t\t\t\t\t<button className=\"btn btn--del\" onClick={e => onRemoveImage(e, i)}>\r\n\t\t\t\t\t\t\t<span className=\"ico ico--del\" />\r\n\t\t\t\t\t\t\t<span className=\"btn__text\">Удалить</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t</section>\r\n)\r\nexport default Workspace;","import React from 'react';\nimport DropspaceContainer from './DropspaceContainer';\nimport Workspace from '../components/Workspace';\n\nclass App extends React.Component {\n\t\n\tstate = {\n\t\tfiles: [],\n\t\timages: [],\n\t\tposition: { x: 0, y: 0 },\n\t\toffset: { x: 0, y: 0 },\n\t\tcoord: { x: 0, y: 0 },\n\t\tselect: null,\n\t}\n\t\n\thandleDrop = (files) => {\n\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\tif (!files[i].name) return\n\t\t\tlet name = files[i].name;\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsDataURL(files[i]);\n\t\t\treader.onload = (e) => {\n\t\t\t\tconst source = e.target.result;\n\t\t\t\tthis.setState({\n\t\t\t\t\tfiles: [...this.state.files, {name: name, src: source}]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t\n\thandleDropFile= (e) => {\n\t\tlet files = e.target.files;\n\t\tthis.handleDrop(files);\n\t}\n\t\n\taddImage = (e) => {\n\t\tthis.setState({\n\t\t\timages: [...this.state.images, {src: e.target.src, position: { top: 0, left: Math.random()*724 } }]\n\t\t});\n\t}\n\t\n\tremoveImage = (e, i) => {\n\t\tthis.setState({\n\t\t\tselect: null,\n\t\t\timages: this.state.images.filter((item, index) => index !== i)\n\t\t});\n\t}\n\t\n\thandleMouseMove = (e) => {\n\t\tconst { coord, offset } = this.state;\n\t\tlet x = coord.x+e.clientX-offset.x;\n\t\tlet y = coord.y+e.clientY-offset.y;\n\t\tthis.setState({\n\t\t\tposition: {x: x, y: y}\n\t\t});\n\t\treturn false;\n\t}\n\t\n\thandleMouseUp = (e, i) => {\n\t\te.preventDefault();\n\t\tconst { select, coord, offset } = this.state;\n\t\tif(select !== null) {\n\t\t\tlet y = coord.y + e.clientY - offset.y;\n\t\t\tlet x = coord.x + e.clientX - offset.x;\n\t\t\tthis.setState({\n\t\t\t\timages: this.state.images.map((image, index) => \n\t\t\t\t\tindex === i ? { src: image.src, position: { top: y, left: x } }  :\n\t\t\t\t\timage\n\t\t\t\t)\n\t\t\t});\n\t\t\tdocument.removeEventListener('mousemove', this.handleMouseMove);\n\t\t}\n\t\treturn false;\n\t}\n\t\n\thandleMouseDown = (e, i) => {\n\t\te.preventDefault();\n\t\tconst image = this.state.images[i];\n\t\t\n\t\tlet offsetX = e.clientX, offsetY = e.clientY;\n\t\t\n\t\tlet coordX = parseInt(image.position.left), coordY = parseInt(image.position.top);\n\t\t\n\t\tthis.setState({\n\t\t\tselect: i,\n\t\t\toffset: {x: offsetX, y: offsetY},\n\t\t\tcoord: {x: coordX, y: coordY},\n\t\t\tposition: {x: coordX, y: coordY}\n\t\t});\n\t\tdocument.addEventListener('mousemove', this.handleMouseMove);\n\t\treturn false;\n\t}\n\t\n\trender = () => (\n\t\t<div className=\"container\">\n\t\t\t<Workspace \n\t\t\t\tonMouseDown={this.handleMouseDown}\n\t\t\t\tonMouseUp={this.handleMouseUp}\n\t\t\t\tonRemoveImage={this.removeImage}\n\t\t\t\timages={this.state.images}\n\t\t\t\tselect={this.state.select}\n\t\t\t\tposition={this.state.position}\n\t\t\t/>\n\t\t\t<DropspaceContainer \n\t\t\t\thandleDrop={this.handleDrop} \n\t\t\t\thandleDropFile={this.handleDropFile} \n\t\t\t\taddImage={this.addImage} \n\t\t\t\tfiles={this.state.files} \n\t\t\t/>\n\t\t</div>\n\t)\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}